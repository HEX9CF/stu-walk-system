package util;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileInputStream;
import java.io.IOException;

/**
 * This class is used to read Excel sheets into a double array.
 */
public class Floor4ReadSheet2 {

    /**
     * Reads an Excel file and returns the data as a double array.
     *
     * @return A double array representing the Excel data.
     */
    public double[][] read() {
        String excelFilePath = "D:\\IdeaProjects\\HTML\\redMove\\floor4.xlsx";
        return readExcelToArray(excelFilePath, "Sheet2");
    }

    /**
     * Reads an Excel file and converts the specified sheet into a double array.
     *
     * @param filePath   The path to the Excel file.
     * @param sheetName The name of the sheet to read.
     * @return A double array representing the sheet data.
     */
    public static double[][] readExcelToArray(String filePath, String sheetName) {
        double[][] dataArray = null;
        try (FileInputStream fis = new FileInputStream(filePath);
             Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheet(sheetName);
            int rowCount = sheet.getPhysicalNumberOfRows();
            int colCount = sheet.getRow(0).getPhysicalNumberOfCells();

            dataArray = new double[rowCount][colCount];

            for (int i = 0; i < rowCount; i++) {
                Row row = sheet.getRow(i);
                if (row == null) continue;

                for (int j = 0; j < colCount; j++) {
                    Cell cell = row.getCell(j);
                    if (cell == null) continue;

                    switch (cell.getCellType()) {
                        case STRING:
                            String cellValue = cell.getStringCellValue();
                            if ("Inf".equals(cellValue)) {
                                dataArray[i][j] = 99999999;
                            } else {
                                System.err.println("Unexpected string value: " + cellValue);
                            }
                            break;
                        case NUMERIC:
                            dataArray[i][j] = (int) cell.getNumericCellValue();
                            break;
                        default:
                            System.err.println("Unexpected cell type: " + cell.getCellType());
                            break;
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return dataArray;
    }
}
